package com.example.a2024_want_to_shoot

data class Rule (
    val category: String,   // 규칙 카테고리
    val rulename : String,
    val description: String //규칙 설명
)


fun rules(): List<Rule> {
    return listOf(
        Rule("기본 규칙","경기의 목적", "볼을 상 대팀의 바스켓에 득점하거나, 또는 상대팀이 득점하는 것을 못하게 하는 데 있다."),
        Rule("기본 규칙","경기 시간", "1쿼터에 10분씩 4쿼터를 치르는데, 1쿼터와 2쿼터, 3쿼터와 4쿼터 사이에는 각 2분씩, 그리고 2쿼터와 3쿼터 사이에는 12분의 휴식 시간이 주어진다."),
        Rule("기본 규칙","코트 규격", "국제농구연맹(FIBA)가 주관하는 공식 대회에서 코트의 규격은 길이 28m, 너비 15m이다."),
        Rule("기본 규칙","공의 규격", "둘레 29.5 인치, 무게 22 온스의 7호 사이즈 농구공은 대부분의 남자 프로농구협회와 대학, 고등학교 남자농구리그의 표준 사이즈이다."),
        Rule("팀 구성 및 선수","팀 구성", "팀은 2명의 포워드, 1명의 센터, 2명의 가드, 총 5명으로 구성된다. 포워드는 상대편의 바스켓 가까이에 있으면서 주요 공격자 역할을 하므로 슛에 능한 선수를 배치한다. '포워드'는 '파워포워드(PF)와 '스몰포워드(SF)가 있다. '파워포워드(PF)는 보통 힘이 센사람이 맡는다."),
        Rule("팀 구성 및 선수","교체 규칙", "인원이나 횟수에 관계없이 20초 안에 이루어져한다."),
        Rule("팀 구성 및 선수","감독 및 코치의 역할", "농구 감독은 팀 전략 수립, 선수 기용, 경기 중 의사 결정 등을 총괄하며, 코치는 감독을 보조하고 선수 훈련과 세부 전술 실행을 담당한다."),
        Rule("경기 시작 및 진행","점프볼 규칙", "매 쿼터 시작 시 혹은 양 구단의 어느 선수가 동시에 공을 잡아서 어느 쪽 공인지 알 수 없게 됐을 때 또는 어느 구단 선수의 터치로 볼이 아웃되었는지 확실히 할 수 없을 때 선언한다."),
        Rule("경기 시작 및 진행","드로우인 및 재개 방법", "농구에서 드로우 인(Throw-In)은 공이 경계 밖으로 나갔을 때, 지정된 선수가 코트 밖에서 공을 던져 경기를 재개하는 방식으로 이루어지며, 5초 이내에 인바운드 패스를 해야한다."),
        Rule("경기 시작 및 진행","공격권 및 점유권", "공격권은 공을 소유한 팀에게 주어지며, 24초 안에 슛을 시도해야 하며, 공이 림에 닿지 않으면 공격권이 상대 팀으로 넘어갑니다. 점유권은 점프볼 상황이나 특정 상황에서 화살표 규칙(Alternating Possession)에 따라 결정된다."),
        Rule("득점 및 스코어링","1점, 2점, 3점 차이", "필드 골은 2점, 3점 라인 밖에서의 슛은 3점, 프리드로우(자유투)의 경우 1점을 얻게 된다."),
        Rule("득점 및 스코어링","득점 인정 조건", "공이 합법적인 슛 동작으로 림을 통과해야 득점이 인정되며, 3점 라인 안쪽은 2점, 바깥쪽은 3점으로 계산됩니다. 자살골(상대가 득점한 경우)은 가장 가까운 상대 선수에게 득점이 기록됩니다."),
        Rule("득점 및 스코어링","자책골 규정", "규정 자책골은 아군 선수에 의한 스로인이나 프리킥으로 인해 직접 기록될 수 없다(코너킥 상황에서는 가능하다-할 수만 있다면 상대 득점으로 인정된다). 또 특정한 상황에서는 자책골로 인정되지 않는다. 자책골을 넣은 선수의 이름은 경기 통계에 \"기록\"된다.")
    )
}